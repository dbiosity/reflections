How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was easy to see becasue of the markup used, immediatelty drew your eye to what was differnt.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Give you ablility to see whart works and doesnt work. See how code and coding style grows and evolves.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Manual commits let you do it at relevant times.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git is designed for coding which uses many interrelated files per project. Others are better for single files system.


How can you use the commands git log and git diff to view the history of files?
To find record of commits with git log, and then use that to find code differnces using diff.

How might using version control make you more confident to make changes that could break something?
It would make you feel safe in thrt you could get back to a working version without losing your work
or getting too far into a hole.

Now that you have your workspace set up, what do you want to try using Git for?
For other udacity courses and for coding apps.
